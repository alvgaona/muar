model penduloDobleInvertido
  parameter Real b = 0.1;
  parameter Real g = 9.81;
  parameter Real l1 = 0.6;
  parameter Real l2 = 0.6;
  parameter Real m1 = 0.2;
  parameter Real m2 = 0.2;
  parameter Real mc = 2;
  parameter Real theta10 = 0;
  parameter Real theta1p0 = 0;
  parameter Real theta20 = 0;
  parameter Real theta2p0 = 0;
  parameter Real xc0 = 0;
  parameter Real xcp0 = 0;
  Modelica.Blocks.Interfaces.RealOutput dtheta1 annotation(Placement(visible = true, iconTransformation(origin = {110, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput dtheta2 annotation(Placement(visible = true, iconTransformation(origin = {110, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput dxc annotation(Placement(visible = true, iconTransformation(origin = {110, -80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput F annotation(Placement(visible = true, iconTransformation(origin = {-110, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput theta1 annotation(Placement(visible = true, iconTransformation(origin = {110, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput theta2 annotation(Placement(visible = true, iconTransformation(origin = {110, -40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput xc annotation(Placement(visible = true, iconTransformation(origin = {110, 60}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Real derVxc1U17;
  Real derVxc2U18;
  Real derVtheta11U19;
  Real derVtheta12U20;
  Real derVtheta21U21;
  Real derVtheta22U22;
initial equation
  xc = xc0;
  theta1 = theta10;
  theta2 = theta20;
  der(xc) = xcp0;
  der(theta2) = theta2p0;
  der(theta1) = theta1p0;
equation
  (-1) * l1 * (m1 + m2) * sin(theta1) * der(theta1) ^ 2 + (-1) * l2 * m2 * sin(theta2) * der(theta2) ^ 2 + m1 * der(derVxc1U17) + m2 * der(derVxc1U17) + mc * der(derVxc1U17) + l1 * m1 * cos(theta1) * der(derVtheta11U19) + l1 * m2 * cos(theta1) * der(derVtheta11U19) + l2 * m2 * cos(theta2) * der(derVtheta21U21) = F + (-1) * b * der(xc);
  (-1) * l1 * ((-1) * g * m1 * sin(theta1) + (-1) * g * m2 * sin(theta1) + l2 * m2 * sin(theta1 + (-1) * theta2) * der(theta2) ^ 2 + (m1 + m2) * cos(theta1) * der(derVxc1U17) + l1 * m1 * der(derVtheta11U19) + l1 * m2 * der(derVtheta11U19) + l2 * m2 * cos(theta1 + (-1) * theta2) * der(derVtheta21U21)) = 0;
  (-1) * l2 * m2 * ((-1) * g * sin(theta2) + (-1) * l1 * sin(theta1 + (-1) * theta2) * der(theta1) ^ 2 + cos(theta2) * der(derVxc1U17) + l1 * cos(theta1 + (-1) * theta2) * der(derVtheta11U19) + l2 * der(derVtheta21U21)) = 0;
  der(xc) = dxc;
  der(theta1) = dtheta1;
  der(theta2) = dtheta2;
  derVxc1U17 = der(xc);
  derVxc2U18 = der(derVxc1U17);
  derVtheta11U19 = der(theta1);
  derVtheta12U20 = der(derVtheta11U19);
  derVtheta21U21 = der(theta2);
  derVtheta22U22 = der(derVtheta21U21);
  annotation(preferredView = "text", Diagram(coordinateSystem(extent = {{-150, -90}, {150, 90}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})), Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Ellipse(visible = true, fillColor = {255, 255, 255}, fillPattern = FillPattern.Solid, extent = {{-100, -100}, {100, 100}}), Polygon(visible = true, rotation = 36, lineColor = {63, 63, 63}, fillColor = {160, 160, 164}, fillPattern = FillPattern.HorizontalCylinder, points = {{52.804, 26.569}, {53.594, 27.384}, {54.497, 28.434}, {55.506, 29.769}, {56.611, 31.447}, {57.194, 32.438}, {57.794, 33.546}, {58.406, 34.782}, {59.024, 36.162}, {59.642, 37.702}, {60.251, 39.418}, {60.251, 39.418}, {56.107, 45.122}, {56.107, 45.122}, {49.763, 44.599}, {48.525, 44.371}, {46.88, 43.993}, {45.464, 43.59}, {44.633, 43.316}, {43.209, 42.773}, {41.586, 42.01}, {40.576, 41.277}, {39.655, 40.665}, {38.325, 40.034}, {36.909, 39.63}, {35.446, 39.464}, {26.579, 45.906}, {26.337, 46.984}, {26.222, 48.452}, {26.351, 49.919}, {26.718, 51.345}, {27.102, 52.532}, {27.262, 53.656}, {27.332, 57.054}, {27.129, 60.472}, {27.038, 61.11}, {26.806, 62.47}, {26.496, 63.949}, {26.091, 65.558}, {25.575, 67.305}, {25.575, 67.305}, {18.87, 69.483}, {18.87, 69.483}, {17.426, 68.374}, {16.153, 67.31}, {15.032, 66.295}, {14.045, 65.331}, {13.177, 64.419}, {12.414, 63.558}, {11.159, 61.988}, {10.202, 60.616}, {9.482, 59.433}, {8.951, 58.43}, {8.565, 57.243}, {8.18, 56.208}, {7.474, 54.915}, {6.566, 53.756}, {5.479, 52.762}, {-5.479, 52.762}, {-6.043, 53.237}, {-6.81, 54.032}, {-7.67, 55.227}, {-8.322, 56.547}, {-8.565, 57.243}, {-8.951, 58.43}, {-9.482, 59.433}, {-10.202, 60.616}, {-11.159, 61.988}, {-11.745, 62.748}, {-12.414, 63.558}, {-13.177, 64.419}, {-14.045, 65.331}, {-15.032, 66.295}, {-16.153, 67.31}, {-17.426, 68.374}, {-18.87, 69.483}, {-18.87, 69.483}, {-25.575, 67.305}, {-25.575, 67.305}, {-26.091, 65.558}, {-26.306, 64.737}, {-26.662, 63.194}, {-26.931, 61.775}, {-27.129, 60.472}, {-27.262, 53.656}, {-27.146, 52.79}, {-27.058, 52.287}, {-26.718, 51.345}, {-26.351, 49.919}, {-26.232, 48.82}, {-26.25, 47.715}, {-26.402, 46.622}, {-26.579, 45.906}, {-35.446, 39.464}, {-36.181, 39.518}, {-37.269, 39.71}, {-38.325, 40.034}, {-39.655, 40.665}, {-40.576, 41.277}, {-41.586, 42.01}, {-42.066, 42.254}, {-43.209, 42.773}, {-43.883, 43.042}, {-45.464, 43.59}, {-47.402, 44.122}, {-48.525, 44.371}, {-49.763, 44.599}, {-56.107, 45.122}, {-56.107, 45.122}, {-60.251, 39.418}, {-60.251, 39.418}, {-59.642, 37.702}, {-59.024, 36.162}, {-58.406, 34.782}, {-57.794, 33.546}, {-57.194, 32.438}, {-56.611, 31.447}, {-56.047, 30.56}, {-55.506, 29.769}, {-54.497, 28.434}, {-53.594, 27.384}, {-52.804, 26.569}, {-51.795, 25.834}, {-50.66, 24.897}, {-49.694, 23.786}, {-49.096, 22.856}, {-48.618, 21.86}, {-51.873, 11.093}, {-52.822, 10.529}, {-53.835, 10.086}, {-54.894, 9.771}, {-55.984, 9.59}, {-57.088, 9.544}, {-58.464, 9.524}, {-59.454, 9.348}, {-60.442, 9.122}, {-61.569, 8.81}, {-62.402, 8.542}, {-63.306, 8.22}, {-64.283, 7.834}, {-65.338, 7.374}, {-66.474, 6.831}, {-67.695, 6.19}, {-69.007, 5.438}, {-70.412, 4.556}, {-71.914, 3.525}, {-71.914, 3.525}, {-71.914, -3.525}, {-71.914, -3.525}, {-70.412, -4.556}, {-69.007, -5.438}, {-67.695, -6.19}, {-66.474, -6.831}, {-65.338, -7.374}, {-64.283, -7.834}, {-63.306, -8.22}, {-62.402, -8.542}, {-61.569, -8.81}, {-60.442, -9.122}, {-59.454, -9.348}, {-58.336, -9.543}, {-56.72, -9.544}, {-54.894, -9.771}, {-53.835, -10.086}, {-52.822, -10.529}, {-51.873, -11.093}, {-48.618, -21.86}, {-49.282, -23.174}, {-49.918, -24.078}, {-50.402, -24.634}, {-51.208, -25.389}, {-52.131, -25.949}, {-53.185, -26.95}, {-54.497, -28.434}, {-55.506, -29.769}, {-56.047, -30.56}, {-56.611, -31.447}, {-57.194, -32.438}, {-57.794, -33.546}, {-58.406, -34.782}, {-59.024, -36.162}, {-59.642, -37.702}, {-60.251, -39.418}, {-60.251, -39.418}, {-56.107, -45.122}, {-56.107, -45.122}, {-49.763, -44.599}, {-48.525, -44.371}, {-46.88, -43.993}, {-45.464, -43.59}, {-43.883, -43.042}, {-42.605, -42.509}, {-41.161, -41.778}, {-39.97, -40.856}, {-38.667, -40.171}, {-37.625, -39.803}, {-36.546, -39.566}, {-35.446, -39.464}, {-26.579, -45.906}, {-26.337, -46.984}, {-26.228, -48.083}, {-26.257, -49.188}, {-26.421, -50.281}, {-26.718, -51.345}, {-27.014, -52.057}, {-27.28, -53.814}, {-27.365, -54.849}, {-27.407, -56.045}, {-27.39, -57.42}, {-27.353, -58.18}, {-27.292, -58.993}, {-27.168, -60.163}, {-26.987, -61.438}, {-26.737, -62.828}, {-26.496, -63.949}, {-26.091, -65.558}, {-25.575, -67.305}, {-25.575, -67.305}, {-18.87, -69.483}, {-18.87, -69.483}, {-17.426, -68.374}, {-16.153, -67.31}, {-15.032, -66.295}, {-14.045, -65.331}, {-13.177, -64.419}, {-12.414, -63.558}, {-11.745, -62.748}, {-11.159, -61.988}, {-10.202, -60.616}, {-9.482, -59.433}, {-8.951, -58.43}, {-8.565, -57.243}, {-8.18, -56.208}, {-7.67, -55.227}, {-7.043, -54.317}, {-6.31, -53.491}, {-5.479, -52.762}, {5.479, -52.762}, {6.31, -53.491}, {7.043, -54.317}, {7.67, -55.227}, {8.18, -56.208}, {8.565, -57.243}, {8.951, -58.43}, {9.482, -59.433}, {10.202, -60.616}, {11.159, -61.988}, {11.745, -62.748}, {12.414, -63.558}, {13.177, -64.419}, {14.045, -65.331}, {15.032, -66.295}, {16.153, -67.31}, {17.426, -68.374}, {18.87, -69.483}, {18.87, -69.483}, {25.575, -67.305}, {25.575, -67.305}, {26.091, -65.558}, {26.662, -63.194}, {26.931, -61.775}, {27.129, -60.472}, {27.262, -53.656}, {27.124, -52.659}, {26.718, -51.345}, {26.351, -49.919}, {26.232, -48.82}, {26.25, -47.715}, {26.402, -46.622}, {26.579, -45.906}, {35.446, -39.464}, {36.546, -39.566}, {37.625, -39.803}, {38.667, -40.171}, {39.655, -40.665}, {40.576, -41.277}, {41.586, -42.01}, {42.066, -42.254}, {43.209, -42.773}, {44.633, -43.316}, {45.464, -43.59}, {46.384, -43.861}, {47.402, -44.122}, {48.525, -44.371}, {49.763, -44.599}, {56.107, -45.122}, {56.107, -45.122}, {60.251, -39.418}, {60.251, -39.418}, {59.642, -37.702}, {59.024, -36.162}, {58.406, -34.782}, {57.794, -33.546}, {57.194, -32.438}, {56.611, -31.447}, {56.047, -30.56}, {55.506, -29.769}, {54.497, -28.434}, {53.594, -27.384}, {52.804, -26.569}, {51.497, -25.618}, {50.66, -24.897}, {49.694, -23.786}, {49.096, -22.856}, {48.618, -21.86}, {51.873, -11.093}, {52.822, -10.529}, {53.835, -10.086}, {54.894, -9.771}, {55.984, -9.59}, {57.088, -9.544}, {58.09, -9.577}, {59.454, -9.348}, {60.442, -9.122}, {61.569, -8.81}, {62.402, -8.542}, {63.306, -8.22}, {64.283, -7.834}, {65.338, -7.374}, {66.474, -6.831}, {67.695, -6.19}, {69.007, -5.438}, {70.412, -4.556}, {71.914, -3.525}, {71.914, -3.525}, {71.914, 3.525}, {71.914, 3.525}, {70.412, 4.556}, {69.007, 5.438}, {67.695, 6.19}, {66.474, 6.831}, {65.338, 7.374}, {64.283, 7.834}, {63.306, 8.22}, {61.569, 8.81}, {60.442, 9.122}, {59.454, 9.348}, {58.336, 9.543}, {57.088, 9.544}, {56.351, 9.559}, {55.255, 9.696}, {54.184, 9.966}, {53.154, 10.367}, {51.873, 11.093}, {48.618, 21.86}, {49.482, 23.484}, {50.402, 24.634}, {51.208, 25.389}, {51.795, 25.834}}), Ellipse(visible = true, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Solid, extent = {{-25, -25}, {25, 25}}), Text(visible = true, textColor = {64, 64, 64}, extent = {{-150, 110}, {150, 150}}, textString = "%name")}));
end penduloDobleInvertido;
